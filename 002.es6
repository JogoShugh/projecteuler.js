//Even Fibonacci numbers
//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

let R = require('ramda');

let fibonacci = function* () {
  let pre = 0, cur = 1;
  while (true) {
    let temp = pre;
    pre = cur;
    cur += temp;
    yield cur;
  }
}

let takeWhile = function* (iterator, predicate) {
  for (let i of iterator)
  {
    if(!predicate(i)) {
      return i;
    };

    yield i;
  }
}

let fibs = takeWhile(fibonacci(), x => x <= 4000000);

let getResult = R.compose(
  R.reduce((x, y) => x + y, 0),
  R.filter(n => n % 2 === 0)
);

let res = getResult(Array.from(fibs));
console.log(res);